neuron custom_hh:
  state:
    r integer # number of steps in the current refractory phase
  end
  initial_values:
    V_m mV = -70.*mV # Membrane potential
    function alpha_m_init real = (0.4*(V_m/mV+66.))/(1.-exp(-(V_m/mV+66.)/5.))
    function beta_m_init real = (0.4*(-(V_m/mV+32.)))/(1.-exp((V_m/mV+32.)/5.))
    Act_m real = alpha_m_init/(alpha_m_init+beta_m_init)
    function h_inf_init real = 1./(1.+exp((V_m/mV+65.)/7.))
    Act_h real = h_inf_init
    function n_inf_init real = 1./(1.+exp(-(V_m/mV+38.)/15.))
    Inact_n real = n_inf_init
    I_syn_in__1 real = e/tau_syn_in
    I_syn_in real = 0
    I_syn_ex__1 real = e/tau_syn_ex
    I_syn_ex real = 0
  end
  parameters:
    t_ref ms = 2.0*ms # Refractory period
    g_Na 1 / GOhm = 5000.0*nS # Sodium peak conductance
    g_L 1 / GOhm = 200.0*nS # Leak conductance
    g_K 1 / GOhm = 30000.0*nS # Potassium peak conductance
    C_m pF = 100.0*pF # Membrane capacitance
    E_Na mV = 50.0*mV
    E_K mV = -80.0*mV
    E_L mV = -70.0*mV
    tau_syn_ex ms = 0.2*ms # Rise time of the excitatory synaptic alpha function i
    tau_syn_in ms = 2.0*ms # Rise time of the inhibitory synaptic alpha function
    I_e pA = 0*pA # Constant Current in pA
  end
  internals:
    RefractoryCounts integer = steps(t_ref) # refractory time in steps
  end
  update:
    U_old mV = V_m

    integrate_odes()
    # sending spikes: crossing 0 mV, pseudo-refractoriness and local maximum...
    if r>0:
      r -= 1
    elif ((V_m>0*mV))and((U_old>V_m)):
      r = RefractoryCounts
      emit_spike()
    end
    I_syn_ex__1 += spikeExc*e/tau_syn_ex
    I_syn_ex += spikeExc*0
    I_syn_in__1 += spikeInh*e/tau_syn_in
    I_syn_in += spikeInh*0
  end
  equations:
    shape I_syn_in' = I_syn_in__1
    shape I_syn_in__1' = -1/(tau_syn_in)**(2)*I_syn_in+-2/tau_syn_in*I_syn_in__1
    shape I_syn_ex' = I_syn_ex__1
    shape I_syn_ex__1' = -1/(tau_syn_ex)**(2)*I_syn_ex+-2/tau_syn_ex*I_syn_ex__1
    function I_syn_exc pA = convolve(I_syn_ex, spikeExc)
    function I_syn_inh pA = convolve(I_syn_in, spikeInh)
    function I_Na pA = g_Na*Act_m*Act_m*Act_m*Act_h*(V_m-E_Na)
    function I_K pA = g_K*Inact_n*Inact_n*Inact_n*Inact_n*(V_m-E_K)
    function I_L pA = g_L*(V_m-E_L)
    function n_inf real = 1./(1.+exp(-(V_m/mV+38.)/15.))
    function n_tau ms = 5./(exp((V_m/mV+50.)/40.)+exp(-(V_m/mV+50.)/50.))
    function alpha_m real = (0.4*(V_m/mV+66.))/(1.-exp(-(V_m/mV+66.)/5.))
    function beta_m real = (0.4*(-(V_m/mV+32.)))/(1.-exp((V_m/mV+32.)/5.))
    function h_inf real = 1./(1.+exp((V_m/mV+65.)/7.))
    function h_tau ms = 30./(exp((V_m/mV+60.)/15.)+exp(-(V_m/mV+60.)/16.))
    V_m' = (-(I_Na+I_K+I_L)+currents+I_e+I_syn_inh+I_syn_exc)/C_m
    Inact_n' = (n_inf-Inact_n)/n_tau
    Act_m' = (alpha_m*(1.-Act_m)-beta_m*Act_m)/ms
    Act_h' = (h_inf-Act_h)/h_tau
  end
  input:
    spikeInh pA <- inhibitory  spike
    spikeExc pA <- excitatory  spike
    currents <- current
  end
  output: spike
end
